1. Password Hashing : In nest js we have a library file, by using which we can hashes the password
 using bcrypt, into this for more security we are providing salt rounds, where salt is a peice of data
 through which we can add this peice of data to the user password, so that it won't be cracked easily
generally we add no of salt to prevent the bruete-force attack, increases the no of rounds increases
the security. But noted that no of rounds increases slightly slowes the performance of service. So 
majoroly between 10-12 rounds is sufficient.

2. OTP GENERATION : Here we have data which is stored in our mongoDB but how can we uniquely 
   identifying them, with the help of the unique id which is auto generated by Mongodb: 
   Firstly we get that id and then pick the email of the user from this. and generate the otp 
   and share that otp to the user's mail.

--> for creating otp, should followed few steps:
(a) First make a schema model for otp
(b) Second Generate Otp: using crypto module it includes two values as an argument:
    (i) inclusive (minimum value)
    (ii) exclusive (maximu value)
Crypto module generates the otp between this range.

--> Now check for is there any previous otp, if yes, delete entire rest otps using mongodb query.
--> After this, make a Send OTP mail Service. 
--> sendMail is an method for sending email it accepts few arguments like : 
    (i) what is the subject, content, email(whom with share the otp)
--> private readonly emailService: SendMailOtpService : 
(a) private : This is an access modifier, which restricts the class members to be in the class.
(b) emailService : This property can be accessed from that method where it is defined.
(c) readonly : It is an modifier, which sets into the constructor but the value can not changed.
(d) emailService : It stores the email sending service.
(e) SendMailOtpService: It is a type of class which provides the email Service.

